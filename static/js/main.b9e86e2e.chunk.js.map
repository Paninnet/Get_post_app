{"version":3,"sources":["logo.svg","Components/Counet.jsx","Components/ClassCouner.jsx","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","count","setCount","onClick","prev","ClassCounet","props","state","addOne","bind","minusOne","this","setState","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAAe,I,mBCEFA,EAAU,WAEpB,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KASA,OACG,gCACG,0CAAaD,KACb,wBAAQE,QAVC,WACZD,GAAS,SAAAE,GAAI,OAAIA,EAAO,MASrB,iBACA,wBAAQD,QAPG,WACdD,GAAS,SAAAE,GAAI,OAAIA,EAAO,MAMrB,uB,mCCeMC,EA9Bf,kDACG,WAAYC,GAAO,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACVN,MAAM,GAET,EAAKO,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAND,EADrB,0CAUG,WACGE,KAAKC,SAAS,CAACX,MAAOU,KAAKJ,MAAMN,MAAQ,MAX/C,sBAcG,WACGU,KAAKC,SAAS,CAACX,MAAOU,KAAKJ,MAAMN,MAAQ,MAf/C,oBAkBG,WACG,OACG,gCACG,0CAAaU,KAAKJ,MAAMN,SACxB,wBAAQE,QAASQ,KAAKH,OAAtB,iBACA,wBAAQL,QAASQ,KAAKD,SAAtB,0BAvBZ,GAAiCG,IAAMC,WCcxBC,MAXf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9e86e2e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react' \r\n\r\nexport const Counter = () =>{\r\n\r\n   const [count, setCount] = useState(0)\r\n\r\n   const addOne = () =>{\r\n      setCount(prev => prev + 1)\r\n   }\r\n\r\n   const minusOne = () =>{\r\n      setCount(prev => prev - 1)\r\n   }\r\n   return(\r\n      <div>\r\n         <p>Counter: {count}</p>\r\n         <button onClick={addOne}>ADD</button>\r\n         <button onClick={minusOne}>MINUS</button>\r\n      </div>\r\n   )\r\n}","import React from 'react'\r\n\r\nexport class ClassCounet extends React.Component {\r\n   constructor(props){\r\n      super(props)\r\n      this.state = {\r\n         count:0\r\n      }\r\n      this.addOne = this.addOne.bind(this)\r\n      this.minusOne = this.minusOne.bind(this)\r\n   }\r\n\r\n   addOne() {\r\n      this.setState({count: this.state.count + 1 })\r\n   }\r\n\r\n   minusOne() {\r\n      this.setState({count: this.state.count + 1 })\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         < div >\r\n            <p>Counter: {this.state.count}</p>\r\n            <button onClick={this.addOne}>ADD</button>\r\n            <button onClick={this.minusOne}>MINUS</button>\r\n         </div >\r\n      )\r\n   }\r\n\r\n}\r\n\r\nexport default ClassCounet","import logo from './logo.svg';\nimport './App.css';\nimport { Counter } from './Components/Counet';\nimport ClassCounet from './Components/ClassCouner';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter/>\n      <Counter/>\n      <Counter/>\n      <ClassCounet/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}